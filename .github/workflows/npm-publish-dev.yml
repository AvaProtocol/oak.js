name: Publish dev version

on:
  workflow_dispatch:
    inputs:
      trigger-manual:
        description: 'Manually trigger the workflow'

jobs:
  publish-dev-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          # List the packages to run here. The matrix will run one job for each package parallelly. 
          - api-augment
          - types
          - config
          - adapter
          - sdk-types
          - sdk

    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --ignore-scripts

      - name: 🛠️ Build
        run: npm run build

      - name: 🔐 Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTOMATION_TOKEN_CHRIS }}" > ~/.npmrc

      - name: Get max published version from npm
        id: get-max-version
        run: |
          all_versions=$(npm show @oak-network/${{ matrix.package }} versions --json)
          all_versions=$(echo "$all_versions" | tr -d ' \t\n\r')
          max_version=$(echo $all_versions | jq 'max' -r)
          echo "::set-output name=max_version::$max_version"

      - name: 🚀 Publish ${{ matrix.package }} package
        working-directory: ./packages/${{ matrix.package }}/build
        run: |
          current_version=$(node -p "require('./package.json').version")
          max_version="${{ steps.get-max-version.outputs.max_version }}"
          if [ "$current_version" '>' "$max_version" ]; then
            echo "Current version: $current_version"
            echo "Max version: $max_version"
            npm publish --tag dev
          else
            echo "Package is up to date."
          fi
